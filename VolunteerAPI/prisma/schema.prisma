// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id         Int           @id @default(autoincrement())
  name       String
  tags       String[]      @default([]) //makes it optional
  location   String
  opportunities Opportunity[] 
}

model Opportunity {
  id               Int           @id @default(autoincrement())
  name             String
  tags             String[]      @default([])
  requirements     String[]      @default([])
  description      String?       
  date             DateTime?     
  createdAt        DateTime      @default(now())
  location         String?       
  skills           String[]      @default([])
  imageUrl         String?     
  volunteersNeeded Int?          
  status           String        @default("active")
  points           Int           @default(0) 
  organization     Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId   Int
  users            User[]        @relation("UserOpportunities")
  savedByUsers     User[]        @relation("SavedOpportunities")
}

model User {
  id           Int           @id @default(autoincrement())
  avatarUrl    String?       @default("https://i.postimg.cc/wT6j0qvg/Screenshot-2025-07-09-at-3-46-05-PM.png")
  username     String        @unique
  password     String
  skills       String[]      @default([])
  training     String[]      @default([])
  createdAt    DateTime      @default(now())
  location     String?
  points       Int           @default(0)
  level        Int           @default(1)
  age          Int?
  opportunities Opportunity[] @relation("UserOpportunities")
  savedOpportunities   Opportunity[] @relation("SavedOpportunities")
  leaderboardRank Int          
}

model Chat {
  id             Int      @id @default(autoincrement())
  conversationId String
  prompt         String
  response       String
  createdAt      DateTime @default(now())
}




